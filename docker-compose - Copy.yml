version: '3.7'

services:

  # docker run -d --name redis-stack -p 6379:6379 -p 8001:8001 redis/redis-stack:latest
  redis:
     image: redis/redis-stack:latest
     ports: 
       - 6379:6379
       - 8001:8001

  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025 # Web ui port
      - 1025:1025 # mail server port

  # rabbitmq:
  #   image: "rabbitmq:3-management"
  #   ports:
  #     - "5672:5672" # Message port
  #     - "15672:15672" # Web UI

    # volumes:
    #   - 'rabbitmq_data:/data'

  # mongo:
  #   image: mongo
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example

  #   volumes:
  #     - ./mongodb:/data/db

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example


  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   image: wurstmeister/kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
  #     KAFKA_CREATE_TOPICS: "test:1:1"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  eventstore:
    #image: eventstore/eventstore:release-5.0.10
    image: eventstore/eventstore:23.10.0-bookworm-slim
    #image: eventstore/eventstore:22.10.1-buster-slim
    #image: eventstore/eventstore:21.10.9-buster-slim
    ports:
      - '2113:2113'
      - '1112:1112'
      - '1113:1113'
    environment:
      EVENTSTORE_EXT_TCP_PORT: 1113
      EVENTSTORE_RUN_PROJECTIONS: all
      EVENTSTORE_START_STANDARD_PROJECTIONS: 'true'
      PROJECTION_THREADS: 8
      INSECURE: true
      EVENTSTORE_INSECURE: true
      EVENTSTORE_ENABLE_EXTERNAL_TCP: true
      EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP: true

    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore
      
  es-labs-messagehub:
    image: es-labs-messagehub:latest
    build:
      context: .
      dockerfile: ./es-labs-messagehub.Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "https://+;http://+" #  -e ASPNETCORE_URLS="https://+;http://+"
      ASPNETCORE_HTTPS_PORT: 4081 # -e ASPNETCORE_HTTPS_PORT=4081
    depends_on:
      - eventstore
    ports:
      - '4080:8080'
      - '4081:443'
      

#   docker pull mcr.microsoft.com/dotnet/samples:aspnetapp
# docker run --rm -it -p 8000:80 -p 8001:443 -e ASPNETCORE_URLS="https://+;http://+" -e ASPNETCORE_Kestrel__Certificates__Default__Password="<CREDENTIAL_PLACEHOLDER>" -e ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx -v ${HOME}/.aspnet/https:/https/ mcr.microsoft.com/dotnet/samples:aspnetapp

  cqrs1:
    image: cqrs1:latest
    # build:
    #   context: .
    #   dockerfile: ../miss-leanskin/src/Dockerfile.CommandQueryApi
    #   tags:
    #     - latest
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      #ASPNETCORE_URLS: http://+:8080
      # eventstore
      ConnectionStrings__REDIS: redis:6379
      ConnectionStrings__EventStore: esdb://admin:changeit@eventstore:2113?tls=false&tlsVerifyCert=false
    depends_on:
      - eventstore
    ports:
      - '8090:8080'
      - '8080:8080'
      - '8091:8081'
      
  esapi:
    image: esapi:latest
    build:
      context: .
      dockerfile: ./ESApi.Dockerfile
      # tags:
      #   - esapi:latest
      #   - yolo
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      #ASPNETCORE_URLS: http://+:8080
      # eventstore
      ConnectionStrings__REDIS: redis:6379
      ConnectionStrings__EventStore: esdb://admin:changeit@eventstore:2113?tls=false&tlsVerifyCert=false
    depends_on:
      - eventstore
      - es-labs-messagehub
    ports:
      - '8060:8080'
      - '8061:6001'
      - '8062:6000'

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:



#   docker pull mcr.microsoft.com/dotnet/samples:aspnetapp
# docker run --rm -it -p 8000:80 -p 8001:443 -e ASPNETCORE_URLS="https://+;http://+" -e ASPNETCORE_HTTPS_PORT=8001 -e ASPNETCORE_Kestrel__Certificates__Default__Password="<CREDENTIAL_PLACEHOLDER>" -e ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx -v ${HOME}/.aspnet/https:/https/ mcr.microsoft.com/dotnet/samples:aspnetapp